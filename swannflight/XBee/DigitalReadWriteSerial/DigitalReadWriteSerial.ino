
const int BUFFER_SIZE = 1050;
char buf[BUFFER_SIZE];
String incomingByte; // for incoming serial data

static unsigned char model_tflite[] = {
  0x1c, 0x00, 0x00, 0x00, 0x54, 0x46, 0x4c, 0x33, 0x14, 0x00, 0x20, 0x00,
  0x04, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x1c, 0x00, 0x14, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x98, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x74, 0x03, 0x00, 0x00,
  0x70, 0x03, 0x00, 0x00, 0x98, 0x02, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00,
  0x64, 0x03, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00,
  0x04, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x6d, 0x69, 0x6e, 0x5f,
  0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
  0x69, 0x6f, 0x6e, 0x00, 0xb6, 0xfd, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x31, 0x2e, 0x35, 0x2e, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x4d, 0x4c, 0x49, 0x52, 0x20, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74,
  0x65, 0x64, 0x2e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x18, 0x00, 0x04, 0x00,
  0x08, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x14, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x84, 0x02, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, 0xa4, 0x01, 0x00, 0x00,
  0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e,
  0x00, 0x00, 0x0e, 0x00, 0x14, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00,
  0x07, 0x00, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
  0x18, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x90, 0xfd, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x00, 0x1c, 0xfe, 0xff, 0xff,
  0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00,
  0x08, 0xfe, 0xff, 0xff, 0xe2, 0xfe, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00,
  0xd0, 0x00, 0x00, 0x00, 0xa0, 0x05, 0xda, 0x2c, 0xd2, 0xf0, 0xcd, 0x2d,
  0x0c, 0xe5, 0x02, 0xac, 0x79, 0x30, 0x8d, 0x2b, 0x99, 0x80, 0xd3, 0x2d,
  0xc5, 0xba, 0x7b, 0xad, 0xf9, 0xf3, 0x51, 0x2d, 0xc2, 0xb8, 0xf8, 0x2c,
  0x49, 0x96, 0xef, 0xac, 0x96, 0x68, 0x0f, 0x2d, 0x50, 0x33, 0xe5, 0xab,
  0x4f, 0xa3, 0x12, 0xad, 0x55, 0x53, 0xdf, 0xad, 0x27, 0x23, 0x03, 0x96,
  0x08, 0x1c, 0x25, 0x94, 0x28, 0x2b, 0xd9, 0x94, 0xbf, 0xbe, 0x63, 0x95,
  0x38, 0xa4, 0xce, 0x94, 0xa0, 0x4e, 0x41, 0x14, 0xaf, 0x3a, 0x39, 0x95,
  0x98, 0x47, 0x18, 0x94, 0xa8, 0xff, 0x7f, 0x95, 0xa7, 0x42, 0x3a, 0x14,
  0x1d, 0x2d, 0xcc, 0x94, 0xa2, 0x3e, 0x42, 0x95, 0x8e, 0xd1, 0x8d, 0x95,
  0x73, 0x16, 0xb6, 0x11, 0x90, 0x5a, 0x29, 0x11, 0x80, 0x24, 0x2a, 0x8f,
  0x80, 0x6e, 0xf0, 0x8d, 0x22, 0xa8, 0x44, 0x91, 0x80, 0x25, 0xbf, 0x0e,
  0x6d, 0xca, 0x5c, 0x91, 0x6c, 0x2e, 0xd3, 0x90, 0xa4, 0x93, 0xa3, 0x11,
  0xfd, 0xeb, 0x6d, 0x91, 0x67, 0x80, 0x0b, 0x11, 0x14, 0xd7, 0xe9, 0x91,
  0xec, 0x52, 0xc8, 0x10, 0x90, 0x4f, 0x19, 0x93, 0x93, 0xbd, 0x9d, 0x92,
  0x8d, 0x94, 0xce, 0x12, 0x5c, 0xef, 0xd2, 0x92, 0xf6, 0x9e, 0x89, 0x13,
  0x24, 0x6a, 0x32, 0x92, 0xd4, 0xad, 0x9a, 0x12, 0x4c, 0x83, 0xa2, 0x13,
  0x7c, 0xa9, 0xed, 0x92, 0x4c, 0xaa, 0x86, 0x93, 0xba, 0x9a, 0x47, 0x12,
  0x7e, 0x6f, 0x9e, 0x13, 0x6c, 0x35, 0xff, 0x90, 0x9a, 0xff, 0xff, 0xff,
  0x10, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x6d, 0x6f, 0x64, 0x65,
  0x6c, 0x2f, 0x64, 0x65, 0x6e, 0x73, 0x65, 0x2f, 0x4d, 0x61, 0x74, 0x4d,
  0x75, 0x6c, 0x00, 0x00, 0x04, 0x00, 0x06, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xc9, 0xcc, 0xcc, 0x3d,
  0x33, 0xc1, 0xda, 0x97, 0x74, 0xb3, 0xb1, 0x13, 0x58, 0x38, 0xf7, 0x14,
  0x00, 0x00, 0x0e, 0x00, 0x14, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x0c, 0x00, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00,
  0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x64, 0x65, 0x6e, 0x73, 0x65, 0x2f,
  0x42, 0x69, 0x61, 0x73, 0x41, 0x64, 0x64, 0x2f, 0x52, 0x65, 0x61, 0x64,
  0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x2f, 0x72,
  0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x00, 0xa8, 0xff, 0xff, 0xff,
  0x14, 0x00, 0x18, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x31, 0x00, 0x02, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x0d, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0xff,
  0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00
};

void setup() {
  Serial.begin(115200); // opens serial port, sets data rate to 9600 bps
}

void loop() {
  // send data only when you receive data:
  // check if data is available
  if (Serial.available() > 0) {
    // read the incoming bytes:
    int rlen = Serial.readBytes(buf, BUFFER_SIZE);

    // prints the received data
//    Serial.print("I received: ");
//    for(int i = 0; i < rlen; i++){
//      Serial.print(buf[i]);
//      //Serial.print("\n");
//    }
    Serial.flush();
    Serial.write("Hello From Arduino\n");
  }
}
